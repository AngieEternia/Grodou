const ownerId = '92712456689848320'
const { InteractionType } = require('discord.js')

module.exports = {
    name: 'interactionCreate',
    once: false,
    async execute(client, interaction) {
        if (interaction.type === InteractionType.ApplicationCommand) {
            const cmd = client.commands.get(interaction.commandName);

            if (!cmd) return interaction.reply({
                content: `Hey mon pote, cette commande n'existe pas !`,
                fetchReply: true
            });

            let permissionsList = cmd.permissions.join(', ');
            permissionsList = permissionsList.replace(/AddReactions|Administrator|AttachFiles|BanMembers|ChangeNickname|Connect|CreateInstantInvite|CreatePrivateThreads|CreatePublicThreads|DeafenMembers|EmbedLinks|KickMembers|ManageChannels|ManageEmojisAndStickers|ManageEvents|ManageGuild|ManageMessages|ManageNicknames|ManageRoles|ManageThreads|ManageWebhooks|MentionEveryone|ModerateMembers|MoveMemberMuteMembers|PrioritySpeaker|ReadMessageHistory|RequestToSpeak|SendMessages|SendMessagesInThreads|SendTTSMessages|Speak|Stream|UseApplicationCommands|UseEmbeddedActivitieUseExternalEmojis|UseExternalStickers|UseVAD|ViewAuditLog|ViewChannel|ViewGuildInsights/gi, function (matched) { return dicoPermissions[matched]; });

            if (cmd.ownerOnly) {
                if (interaction.user.id != ownerId) {
                    return interaction.reply({
                        content: `**‚ùå Eh oh ${interaction.member}, y'a que mon d√©veloppeur qui peut ex√©cuter cette commande !**`,
                        ephemeral: true,
                        fetchReply: true
                    })
                }
            }

            if (!interaction.member.permissions.has([cmd.permissions])) {
                return interaction.reply({
                    content: `**‚ùå Eh oh ${interaction.member}, t'as pas les permissions pour ex√©cuter cette commande !\nü™ß ${(permissionsList.split(',')).length > 1 ? "Permissions requises" : "Permission requise"} : üô∂ \`${permissionsList}\` üô∏**`,
                    ephemeral: true,
                    fetchReply: true
                })
            }

            cmd.runInteraction(client, interaction);
        }
        else if (interaction.isAutocomplete()) {
            const cmd = client.commands.get(interaction.commandName);
            if (!cmd) return;
            cmd.runAutocomplete(client, interaction);
        }
        else if (interaction.isButton()) {
            const btn = client.buttons.get(interaction.customId);
            if (!btn) return interaction.reply("Ce bouton n'existe pas!");
            else {
                btn.runInteraction(client, interaction);
            }
        }
        else if (interaction.isSelectMenu()) {
            const select = client.selects.get(interaction.customId);
            if (!select) return interaction.reply("Ce menu n'existe pas!");
            else {
                select.runInteraction(client, interaction);
            }
        }
    }
}

const dicoPermissions = {
    AddReactions: "Ajouter des r√©actions", Administrator: "Administrateur", AttachFiles: "Joindre des fichiers", BanMembers: "Bannir des membres", ChangeNickname: "Changer les pseudos", Connect: "Se connecter", CreateInstantInvite: "Cr√©er une invitation", CreatePrivateThreads: "Cr√©er des fils priv√©s", CreatePublicThreads: "Cr√©er des fils publics", DeafenMembers: "Mettre en sourdine des membres", EmbedLinks: "Int√©grer des liens", KickMembers: "Expulser des membres", ManageChannels: "G√©rer les salons", ManageEmojisAndStickers: "G√©rer les √©mojis et les autocollants", ManageEvents: "G√©rer les √©v√©nements", ManageGuild: "G√©rer le serveur", ManageMessages: "G√©rer les messages", ManageNicknames: "G√©rer les pseudos", ManageRoles: "G√©rer les r√¥les", ManageThreads: "G√©rer les fils", ManageWebhooks: "G√©rer les webhooks", MentionEveryone: "Mentionner @everyone, @here et tous les r√¥les", ModerateMembers: "Exclure temporairement des membres", MoveMembers: "D√©placer des membres", MuteMembers: "Rendre les membres muets", PrioritySpeaker: "Voix prioritaire", ReadMessageHistory: "Voir les anciens messages", RequestToSpeak: "Demande de prise de parole", SendMessages: "Envoyer des messages", SendMessagesInThreads: "Envoyer des messages dans les fils", SendTTSMessages: "Envoyer des messages de synth√®se vocale", Speak: "Parler", Stream: "Vid√©o", UseApplicationCommands: "Utiliser les commandes de l'application", UseEmbeddedActivities: "Utiliser les Activit√©s", UseExternalEmojis: "Utiliser des √©mojis externes", UseExternalStickers: "Utiliser des autocollants externes", UseVAD: "Utiliser la D√©tection de la voix", ViewAuditLog: "Voir les logs du serveurs", ViewChannel: "Voir les salons", ViewGuildInsights: "Voir les stats du serveur"
}